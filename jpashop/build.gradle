plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.jpabook'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //---롬복 관련 dependency 시작 ---
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    //---롬복 관련 dependency 끝 ---

    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.2'

    //---Hibernate5Module dependency ---
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5-jakarta'

}

tasks.named('test') {
    useJUnitPlatform()
}

//엔티티를 직접 노출하는 것은 좋지 않다. (앞장에서 이미 설명)
//order member 와 order address 는 지연 로딩이다. 따라서 실제 엔티티 대신에 프록시 존재
//jackson 라이브러리는 기본적으로 이 프록시 객체를 json으로 어떻게 생성해야 하는지 모름 예외 발생
//Hibernate5Module 을 스프링 빈으로 등록하면 해결(스프링 부트 사용중)
